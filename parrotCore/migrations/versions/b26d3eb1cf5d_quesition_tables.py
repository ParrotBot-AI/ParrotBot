"""quesition tables

Revision ID: b26d3eb1cf5d
Revises: 1e5845a9c581
Create Date: 2024-01-25 14:57:09.437288

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'b26d3eb1cf5d'
down_revision: Union[str, None] = '1e5845a9c581'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('BasicQuestionsType',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type_name', sa.String(length=20), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('detail', sa.String(length=50), nullable=False),
    sa.Column('restriction', sa.String(length=50), nullable=False),
    sa.Column('cal_function', sa.String(length=50), nullable=True),
    sa.Column('create_time', sa.DateTime(), nullable=True),
    sa.Column('last_update_time', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('AnswerSheetRecord',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('type', sa.Enum('mock_exam', 'practice', 'learning', name='answertype'), nullable=True),
    sa.Column('max_score', sa.Integer(), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('is_graded', sa.Boolean(), nullable=True),
    sa.Column('is_time', sa.Boolean(), nullable=True),
    sa.Column('is_check_answer', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('create_time', sa.DateTime(), nullable=True),
    sa.Column('last_update_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['Accounts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('Analysis', sa.Column('is_active', sa.Boolean(), nullable=True))
    op.add_column('Indicators_Questions', sa.Column('is_active', sa.Boolean(), nullable=True))
    op.add_column('Questions', sa.Column('remark', sa.String(length=30), nullable=True))
    op.alter_column('Questions', 'question_title',
               existing_type=mysql.VARCHAR(length=20),
               nullable=True)
    op.alter_column('Questions', 'question_content',
               existing_type=mysql.TEXT(),
               nullable=True)
    op.alter_column('Questions', 'question_stem',
               existing_type=mysql.VARCHAR(length=600),
               nullable=True)
    op.alter_column('Questions', 'father_question',
               existing_type=mysql.INTEGER(),
               nullable=False)
    op.alter_column('Questions', 'duration',
               existing_type=mysql.FLOAT(),
               nullable=True)
    op.drop_column('Questions', 'rubric_detail')
    op.add_column('QuestionsType', sa.Column('basic_question_type', sa.Integer(), nullable=True))
    op.add_column('QuestionsType', sa.Column('detail', sa.String(length=50), nullable=True))
    op.add_column('QuestionsType', sa.Column('restriction', sa.String(length=50), nullable=True))
    op.create_foreign_key(None, 'QuestionsType', 'BasicQuestionsType', ['basic_question_type'], ['id'], ondelete='CASCADE')
    op.drop_column('QuestionsType', 'limitation')
    op.add_column('Submissions', sa.Column('answer_sheet_id', sa.Integer(), nullable=False))
    op.add_column('Submissions', sa.Column('stem_weight', sa.Text(), nullable=False))
    op.add_column('Submissions', sa.Column('cal_method', sa.Integer(), nullable=True))
    op.add_column('Submissions', sa.Column('max_score', sa.Integer(), nullable=True))
    op.add_column('Submissions', sa.Column('is_graded', sa.Integer(), nullable=False))
    op.drop_constraint('Submissions_ibfk_1', 'Submissions', type_='foreignkey')
    op.create_foreign_key(None, 'Submissions', 'AnswerSheetRecord', ['answer_sheet_id'], ['id'], ondelete='CASCADE')
    op.drop_column('Submissions', 'graded')
    op.drop_column('Submissions', 'account_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('Submissions', sa.Column('account_id', mysql.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('Submissions', sa.Column('graded', mysql.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'Submissions', type_='foreignkey')
    op.create_foreign_key('Submissions_ibfk_1', 'Submissions', 'Accounts', ['account_id'], ['id'], ondelete='CASCADE')
    op.drop_column('Submissions', 'is_graded')
    op.drop_column('Submissions', 'max_score')
    op.drop_column('Submissions', 'cal_method')
    op.drop_column('Submissions', 'stem_weight')
    op.drop_column('Submissions', 'answer_sheet_id')
    op.add_column('QuestionsType', sa.Column('limitation', mysql.VARCHAR(length=50), nullable=True))
    op.drop_constraint(None, 'QuestionsType', type_='foreignkey')
    op.drop_column('QuestionsType', 'restriction')
    op.drop_column('QuestionsType', 'detail')
    op.drop_column('QuestionsType', 'basic_question_type')
    op.add_column('Questions', sa.Column('rubric_detail', mysql.VARCHAR(length=50), nullable=True))
    op.alter_column('Questions', 'duration',
               existing_type=mysql.FLOAT(),
               nullable=False)
    op.alter_column('Questions', 'father_question',
               existing_type=mysql.INTEGER(),
               nullable=True)
    op.alter_column('Questions', 'question_stem',
               existing_type=mysql.VARCHAR(length=600),
               nullable=False)
    op.alter_column('Questions', 'question_content',
               existing_type=mysql.TEXT(),
               nullable=False)
    op.alter_column('Questions', 'question_title',
               existing_type=mysql.VARCHAR(length=20),
               nullable=False)
    op.drop_column('Questions', 'remark')
    op.drop_column('Indicators_Questions', 'is_active')
    op.drop_column('Analysis', 'is_active')
    op.drop_table('AnswerSheetRecord')
    op.drop_table('BasicQuestionsType')
    # ### end Alembic commands ###
